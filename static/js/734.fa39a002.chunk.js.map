{"version":3,"file":"static/js/734.fa39a002.chunk.js","mappings":"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","sources":["Components/ScrollVelocity.jsx"],"sourcesContent":["import { useRef, useLayoutEffect, useState } from \"react\";\r\nimport {\r\n  motion,\r\n  useScroll,\r\n  useSpring,\r\n  useTransform,\r\n  useMotionValue,\r\n  useVelocity,\r\n  useAnimationFrame,\r\n} from \"framer-motion\";\r\nimport \"./ScrollVelocity.css\";\r\n\r\nfunction useElementWidth(ref) {\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useLayoutEffect(() => {\r\n    function updateWidth() {\r\n      if (ref.current) {\r\n        setWidth(ref.current.offsetWidth);\r\n      }\r\n    }\r\n    updateWidth();\r\n    window.addEventListener(\"resize\", updateWidth);\r\n    return () => window.removeEventListener(\"resize\", updateWidth);\r\n  }, [ref]);\r\n\r\n  return width;\r\n}\r\n\r\nexport const ScrollVelocity = ({\r\n  scrollContainerRef,\r\n  texts = [],\r\n  velocity = 25,\r\n  className = \"\",\r\n  damping = 50,\r\n  stiffness = 400,\r\n  numCopies = 6,\r\n  velocityMapping = { input: [0, 1000], output: [0, 5] },\r\n  parallaxClassName = \"parallax\",\r\n  scrollerClassName = \"scroller\",\r\n  parallaxStyle,\r\n  scrollerStyle,\r\n}) => {\r\n  function VelocityText({\r\n    children,\r\n    baseVelocity = velocity,\r\n    scrollContainerRef,\r\n    className = \"\",\r\n    damping,\r\n    stiffness,\r\n    numCopies,\r\n    velocityMapping,\r\n    parallaxClassName,\r\n    scrollerClassName,\r\n    parallaxStyle,\r\n    scrollerStyle,\r\n  }) {\r\n    const baseX = useMotionValue(0);\r\n    const scrollOptions = scrollContainerRef ? { container: scrollContainerRef } : {};\r\n    const { scrollY } = useScroll(scrollOptions);\r\n    const scrollVelocity = useVelocity(scrollY);\r\n    const smoothVelocity = useSpring(scrollVelocity, {\r\n      damping: damping ?? 50,\r\n      stiffness: stiffness ?? 400,\r\n    });\r\n    const velocityFactor = useTransform(\r\n      smoothVelocity,\r\n      velocityMapping?.input || [0, 1000],\r\n      velocityMapping?.output || [0, 5],\r\n      { clamp: false }\r\n    );\r\n\r\n    const copyRef = useRef(null);\r\n    const copyWidth = useElementWidth(copyRef);\r\n\r\n    function wrap(min, max, v) {\r\n      const range = max - min;\r\n      const mod = (((v - min) % range) + range) % range;\r\n      return mod + min;\r\n    }\r\n\r\n    const x = useTransform(baseX, (v) => {\r\n      if (copyWidth === 0) return \"0px\";\r\n      return `${wrap(-copyWidth, 0, v)}px`;\r\n    });\r\n\r\n    const directionFactor = useRef(1);\r\n    useAnimationFrame((t, delta) => {\r\n      let moveBy = directionFactor.current * baseVelocity * (delta / 1000);\r\n\r\n      if (velocityFactor.get() < 0) {\r\n        directionFactor.current = -1;\r\n      } else if (velocityFactor.get() > 0) {\r\n        directionFactor.current = 1;\r\n      }\r\n\r\n      moveBy += directionFactor.current * moveBy * velocityFactor.get();\r\n      baseX.set(baseX.get() + moveBy);\r\n    });\r\n\r\n    const spans = [];\r\n    for (let i = 0; i < numCopies; i++) {\r\n      spans.push(\r\n        <span className={className} key={i} ref={i === 0 ? copyRef : null}>\r\n          {children}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={parallaxClassName} style={parallaxStyle}>\r\n        <motion.div\r\n          className={scrollerClassName}\r\n          style={{ x, ...scrollerStyle }}\r\n        >\r\n          {spans}\r\n        </motion.div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {texts.map((text, index) => (\r\n        <VelocityText\r\n          key={index}\r\n          className={className}\r\n          baseVelocity={index % 2 !== 0 ? -velocity : velocity}\r\n          scrollContainerRef={scrollContainerRef}\r\n          damping={damping}\r\n          stiffness={stiffness}\r\n          numCopies={numCopies}\r\n          velocityMapping={velocityMapping}\r\n          parallaxClassName={parallaxClassName}\r\n          scrollerClassName={scrollerClassName}\r\n          parallaxStyle={parallaxStyle}\r\n          scrollerStyle={scrollerStyle}\r\n        >\r\n          {text}&nbsp;\r\n        </VelocityText>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ScrollVelocity;\r\n"],"names":["ScrollVelocity","_ref","scrollContainerRef","texts","velocity","className","damping","stiffness","numCopies","velocityMapping","input","output","parallaxClassName","scrollerClassName","parallaxStyle","scrollerStyle","VelocityText","_ref2","children","baseVelocity","baseX","useMotionValue","scrollOptions","container","scrollY","useScroll","scrollVelocity","useVelocity","smoothVelocity","useSpring","velocityFactor","useTransform","clamp","copyRef","useRef","copyWidth","ref","width","setWidth","useState","useLayoutEffect","updateWidth","current","offsetWidth","window","addEventListener","removeEventListener","useElementWidth","x","v","min","max","range","wrap","directionFactor","useAnimationFrame","t","delta","moveBy","get","set","spans","i","push","_jsx","style","motion","div","map","text","index","_jsxs"],"sourceRoot":""}