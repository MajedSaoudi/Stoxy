"use strict";(self.webpackChunklearningreact=self.webpackChunklearningreact||[]).push([[938],{3938:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n(8696),a=n(5043),s=n(579);const i=e=>{let{text:t="",className:n="",delay:i=100,animationFrom:l={opacity:0,transform:"translate3d(0,40px,0)"},animationTo:o={opacity:1,transform:"translate3d(0,0,0)"},easing:c="easeOutCubic",threshold:p=.1,rootMargin:d="-100px",textAlign:u="center",onLetterAnimationComplete:h}=e;const m=t.split(" ").map((e=>e.split(""))),f=m.flat(),[g,y]=(0,a.useState)(!1),w=(0,a.useRef)(),b=(0,a.useRef)(0);(0,a.useEffect)((()=>{const e=new IntersectionObserver((t=>{let[n]=t;n.isIntersecting&&(y(!0),e.unobserve(w.current))}),{threshold:p,rootMargin:d});return e.observe(w.current),()=>e.disconnect()}),[p,d]);const x=(0,r.mX)(f.length,f.map(((e,t)=>({from:l,to:g?async e=>{await e(o),b.current+=1,b.current===f.length&&h&&h()}:l,delay:t*i,config:{easing:c}}))));return(0,s.jsx)("p",{ref:w,className:`split-parent ${n}`,style:{textAlign:u,overflow:"hidden",display:"inline",whiteSpace:"normal",wordWrap:"break-word"},children:m.map(((e,t)=>(0,s.jsxs)("span",{style:{display:"inline-block",whiteSpace:"nowrap"},children:[e.map(((e,n)=>{const a=m.slice(0,t).reduce(((e,t)=>e+t.length),0)+n;return(0,s.jsx)(r.CS.span,{style:{...x[a],display:"inline-block",willChange:"transform, opacity"},children:e},a)})),(0,s.jsx)("span",{style:{display:"inline-block",width:"0.3em"},children:"\xa0"})]},t)))})}}}]);
//# sourceMappingURL=938.c59185f7.chunk.js.map