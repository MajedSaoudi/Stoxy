{"version":3,"file":"static/js/938.c59185f7.chunk.js","mappings":"4KAGA,MAsFA,EAtFkBA,IAWX,IAXY,KACjBC,EAAO,GAAE,UACTC,EAAY,GAAE,MACdC,EAAQ,IAAG,cACXC,EAAgB,CAAEC,QAAS,EAAGC,UAAW,yBAAyB,YAClEC,EAAc,CAAEF,QAAS,EAAGC,UAAW,sBAAsB,OAC7DE,EAAS,eAAc,UACvBC,EAAY,GAAG,WACfC,EAAa,SAAQ,UACrBC,EAAY,SAAQ,0BACpBC,GACDZ,EACC,MAAMa,EAAQZ,EAAKa,MAAM,KAAKC,KAAIC,GAAQA,EAAKF,MAAM,MAE/CG,EAAUJ,EAAMK,QACfC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,GAAMC,EAAAA,EAAAA,UACNC,GAAgBD,EAAAA,EAAAA,QAAO,IAE7BE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBC,IAAc,IAAZC,GAAMD,EACFC,EAAMC,iBACRV,GAAU,GACVM,EAASK,UAAUT,EAAIU,SACzB,GAEF,CAAEvB,YAAWC,eAKf,OAFAgB,EAASO,QAAQX,EAAIU,SAEd,IAAMN,EAASQ,YAAY,GACjC,CAACzB,EAAWC,IAEf,MAAMyB,GAAUC,EAAAA,EAAAA,IACdnB,EAAQoB,OACRpB,EAAQF,KAAI,CAACuB,EAAGC,KAAC,CACfC,KAAMpC,EACNqC,GAAItB,EACAuB,gBACMC,EAAKpC,GACXiB,EAAcQ,SAAW,EACrBR,EAAcQ,UAAYf,EAAQoB,QAAUzB,GAC9CA,GACF,EAEAR,EACJD,MAAOoC,EAAIpC,EACXyC,OAAQ,CAAEpC,eAId,OACEqC,EAAAA,EAAAA,KAAA,KACEvB,IAAKA,EACLpB,UAAW,gBAAgBA,IAC3B4C,MAAO,CAAEnC,YAAWoC,SAAU,SAAUC,QAAS,SAAUC,WAAY,SAAUC,SAAU,cAAeC,SAEzGtC,EAAME,KAAI,CAACC,EAAMoC,KAChBC,EAAAA,EAAAA,MAAA,QAAsBP,MAAO,CAAEE,QAAS,eAAgBC,WAAY,UAAWE,SAAA,CAC5EnC,EAAKD,KAAI,CAACuC,EAAQC,KACjB,MAAMC,EAAQ3C,EACX4C,MAAM,EAAGL,GACTM,QAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEvB,QAAQ,GAAKkB,EAE3C,OACEV,EAAAA,EAAAA,KAACgB,EAAAA,GAASC,KAAI,CAEZhB,MAAO,IACFX,EAAQqB,GACXR,QAAS,eACTe,WAAY,sBACZZ,SAEDG,GAPIE,EAQS,KAGpBX,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEE,QAAS,eAAgBgB,MAAO,SAAUb,SAAC,WAnBjDC,MAsBX,C","sources":["Components/SplitText.jsx"],"sourcesContent":["import { useSprings, animated } from '@react-spring/web';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nconst SplitText = ({\r\n  text = '',\r\n  className = '',\r\n  delay = 100,\r\n  animationFrom = { opacity: 0, transform: 'translate3d(0,40px,0)' },\r\n  animationTo = { opacity: 1, transform: 'translate3d(0,0,0)' },\r\n  easing = 'easeOutCubic',\r\n  threshold = 0.1,\r\n  rootMargin = '-100px',\r\n  textAlign = 'center',\r\n  onLetterAnimationComplete,\r\n}) => {\r\n  const words = text.split(' ').map(word => word.split(''));\r\n\r\n  const letters = words.flat();\r\n  const [inView, setInView] = useState(false);\r\n  const ref = useRef();\r\n  const animatedCount = useRef(0);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setInView(true);\r\n          observer.unobserve(ref.current);\r\n        }\r\n      },\r\n      { threshold, rootMargin }\r\n    );\r\n\r\n    observer.observe(ref.current);\r\n\r\n    return () => observer.disconnect();\r\n  }, [threshold, rootMargin]);\r\n\r\n  const springs = useSprings(\r\n    letters.length,\r\n    letters.map((_, i) => ({\r\n      from: animationFrom,\r\n      to: inView\r\n        ? async (next) => {\r\n          await next(animationTo);\r\n          animatedCount.current += 1;\r\n          if (animatedCount.current === letters.length && onLetterAnimationComplete) {\r\n            onLetterAnimationComplete();\r\n          }\r\n        }\r\n        : animationFrom,\r\n      delay: i * delay,\r\n      config: { easing },\r\n    }))\r\n  );\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      className={`split-parent ${className}`}\r\n      style={{ textAlign, overflow: 'hidden', display: 'inline', whiteSpace: 'normal', wordWrap: 'break-word' }}\r\n    >\r\n      {words.map((word, wordIndex) => (\r\n        <span key={wordIndex} style={{ display: 'inline-block', whiteSpace: 'nowrap' }}>\r\n          {word.map((letter, letterIndex) => {\r\n            const index = words\r\n              .slice(0, wordIndex)\r\n              .reduce((acc, w) => acc + w.length, 0) + letterIndex;\r\n\r\n            return (\r\n              <animated.span\r\n                key={index}\r\n                style={{\r\n                  ...springs[index],\r\n                  display: 'inline-block',\r\n                  willChange: 'transform, opacity',\r\n                }}\r\n              >\r\n                {letter}\r\n              </animated.span>\r\n            );\r\n          })}\r\n          <span style={{ display: 'inline-block', width: '0.3em' }}>&nbsp;</span>\r\n        </span>\r\n      ))}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default SplitText;\r\n"],"names":["_ref","text","className","delay","animationFrom","opacity","transform","animationTo","easing","threshold","rootMargin","textAlign","onLetterAnimationComplete","words","split","map","word","letters","flat","inView","setInView","useState","ref","useRef","animatedCount","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","current","observe","disconnect","springs","useSprings","length","_","i","from","to","async","next","config","_jsx","style","overflow","display","whiteSpace","wordWrap","children","wordIndex","_jsxs","letter","letterIndex","index","slice","reduce","acc","w","animated","span","willChange","width"],"sourceRoot":""}